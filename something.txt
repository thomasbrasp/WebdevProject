Userstories OrganiseMe
Userstories OrganiseMe
"As a user, I want to"
- have a popup form with the details of my event during interactions with events
- have every screen or interaction include an exit strategy, e.g., a close button
- add events to my calendar
- be able to set a default start time for an event as a suggestion when creating one
- delete events from my calendar
- change the title of my event
- edit the description of my event
- update the time of my event
- adjust the date of an event
- move an event to a different day by dragging it to the desired day
- add a color code to an event
- have an option to mark an event as an all-day event
- see an overview of events in a day/week/month (chronologically)
- assign priorities to specific events
- link certain color codes to specific subjects/deadlines
- have multiple calendars
- have an import/export function to manually share/upload/update my calendar
- have a day view
- have a week view
- have a month view
- use a popup mini-calendar to navigate between days/weeks/months
- have a navigation option (suggestion: arrows) to go to the previous or next page
- have a page without a calendar where all events are displayed chronologically
- use filter options on calendar overviews
- set timeslots where I want to be productive but haven't planned specific tasks yet
- have an overview of unscheduled calendar items
- assign a topic to an empty timeslot that was set as a productive slot
- automatically populate the title and description when linking a topic to a timeslot, so I only need to select the timeslot
- avoid having duplicate events
- get a notification when an event overlaps with another
"As a developer, I want to"
- cancel the entire action when a user does not fully or correctly complete an interaction
- use the opportunity of attending an event to network or gain new insights regarding our project, possibly tips
- avoid having 50 user stories, but realistically convert the entire project into user stories for a clear planning of our future tasks
- create wireframes for the pages desired by the user
- assign a hashcode or unique ID to events so that they cannot be lost
- ensure the active page reloads with updated information after modifying events
- start a dev container where all developers can participate together
- have a git repository where everyone has equal rights
- log or use console.log to provide feedback on every component under development, indicating what is being modified or implemented
- save all events in a JSON file
- store changes or additions to events in a separate file until successfully updated in the general events file
- prevent any merge into main without confirmation from all admins
- have analytics on when and who (anonymously) uses the app
- have analytics on the frequency of use by person x
- have analytics on the most and least popular features of the app
- make feedback accessible on every page
- create a developer board alongside Trello to transparently display project progress, also giving users the opportunity to suggest features
- scrape the school website to gather data for importing a lesson schedule
- access an ICS format of the WebUntis calendar
- research the implementation of MongoDB
- validate user input (focus on all possible incorrect inputs)
- aim to program everything Moodle-oriented to potentially implement the app on the school platform

"Als gebruiker wil ik"
- tijdens interacties met events een popup form hebben met de gegevens van mijn event
- dat elk schermpje of elke interactie moet een exit strategy hebben , vb een kruisje om te sluiten
- events toevoegen aan mijn kalender
- kunnen instellen wat een standaard starttijd is voor een event als suggestie bij het aanmaken van een event
- events verwijderen van mijn kalender
- de titel van mijn event kunnen aanpassen
- de beschrijving van mijn event kunnen aanpassen
- de tijd van mijn event kunnen aanpassen
- de datum van een event aanpassen
- een event kunnen verplaatsen van dag door het te slepen naar de gewenste dag
- een kleuren code kunnen toevoegen aan een event
- een optie hebben om een event een hele dag te laten plaatsvinden
- een overzicht hebben van de events op een dag/week/maand (chronologisch)
- prioriteiten toevoegen aan bepaalde events
- bepaalde kleurencodes koppelen aan bepaalde vakken/deadlines
- meerdere agendas hebben
- icl import/export functie hebben voor manueel mijn kalender te delen/uploaden/updaten
- een dag overzicht
- een week overzicht
- een maand overzicht
- een popup minikalender om te navigeren tussen dagen/weken/maanden
- een navigatie optie (suggestie pijlen) om naar vorige of volgende pagina te gaan
- een pagina zonder kalender waar al de events chronologisch weergegeven worden
- filter mogelijkheden op agenda overzichten
- tijdslots vastzetten waarin ik productief wil zijn maar nog niet concreet een planning heb
- op een overzicht van niet ingeplande agendapunten,
de mogelijkheid hebben om een topic toe te wijzen aan een leeg tijdslot dat is ingepland als productief slot
- wanneer ik een topic koppel aan een tijdslot, deze meteen de titel en de description invuld zodat ik enkel het tijdslot moet kiezen.
- dat ik geen dubbele events heb.
- een melding krijgen als een event overlapt met een ander event.



"als developer wil ik"
- wanneer een gebruiker een interactie niet volledig of juist voltooid, deze de hele actie annuleert
- tijdens de opdracht van een event bij te wonen proberen netwerken of nieuwe inzichten te krijgen omtrent ons project. eventueel tips.
- geen 50 userstories hebben, maar realistisch het hele project omzetten in userstories zodat we duidelijk een planning kunnen maken voor onze verdere
opdrachten.
- wire frames opstellen voor de door de gebruiker gewenste paginas
- events een hashcode of unieke id geven zodat events niet verloren kunnen gaan
- dat na aanpassen van events, de actieve pagina een reload doet met de nieuwe informatie verwerkt.
- een dev container opstarten waar al de devs samen in kunnen deelnemen
- een git repo hebben waar iedereen gelijke rechten heeft
- bij elke onderdeel dat in ontwikkeling is, een logbestand of console.log feedback krijgen op wat ik aan het veranderen of implementeren ben
- alle events opslaan in een json
- dat veranderingen of toevoegingen van events in een apart bestand worden opgeslagen tot deze succesvol zijn aangepast in het algemeen bestand van events
- dat er geen enkele merge kan gedaan worden naar de main zonder bevestiging van al de admins
- analytics hebben over wanneer en wie (anoniem) de app gebruikt
- analytics hebben over frequentie van gebruik door persoon x
- analytics over de meest gebruikte en de minst gegeerde features op de app
- feedback toegankelijk maken op elke pagina
- naast trello een developer board maken om transparant de gang van het project weer te geven,
als ook gebruikers de kans te geven om features voor te stellen
- wil ik de website van school scrapen om zo aan gegevens te komen om een lessenrooster te kunnen importeren
- toegang hebben tot een ics format van de webuntis kalender
- onderzoek doen naar de implementatie van mongoDB
- validatie van userinput in orde maken (focus leggen op alle mogelijke foute input)
- proberen alles moodle gericht te programmeren zodat een eventuele implementatie van de app op het schoolplatform mogelijk is

